@page "/blog/view/{ID:int}"
@page "/blog/view/{ID:int}/{Title}"
@inject IBlogClient BlogClient

@if (_blogDTO == null)
{
    <Loading />
}
else
{
    <!-- Title -->
    <h1 class="mt-4">@_blogDTO.Title</h1>

    <!-- Author -->
    <p class="lead">by<a href="#">@_blogDTO.CreatedBy</a></p>

    <hr>

    <!-- Date/Time -->
    <p>
        Posted on
        @_blogDTO.DateCreated.Value.ToString("MMMM")
        @_blogDTO.DateCreated.Value.Month,
        @_blogDTO.DateCreated.Value.Month at
        @_blogDTO.DateCreated.Value.ToString("HH:mm")
    </p>

    <hr>

    <!-- Preview Image -->

    @if (_blogDTO.Cover == null)
    {
        <img class="img-fluid rounded" src="css/Images/image_not_available_template.png">
    }
    else
    {
        <img class="img-fluid rounded" src="data:image/jpeg;base64,@(Convert.ToBase64String(_blogDTO.Cover))">
    }

    <hr>

    <!-- Post Content -->
    @((MarkupString)_blogDTO.HTMLContent)

    <div class="my-2">
        Categories:
        @foreach (var categoryDTO in _blogDTO.CategoryDTOs)
        {
            <a href="#" class="btn-link mx-2">@categoryDTO.Name</a>
        }
    </div>

    <div class="my-2">
        Tags:
        @foreach (var tag in new string[] { "IT", "Tech", "Blazor", "C#", "HTML", "CSS" })
        {
            <a href="#" class="btn btn-light">@tag</a>
        }
    </div>

    <hr>

    <!-- Comments -->
    <CommentSection BlogID="ID" />
}

@code{
    [Parameter] public int ID { get; set; }
    [Parameter] public string Title { get; set; }

    private BlogDTO _blogDTO { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _blogDTO = await BlogClient.GetAsync(ID);
    }
}