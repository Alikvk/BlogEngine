@page "/blog/search"
@page "/blog/search/{SearchString}"
@layout NavigationLayout
@inject IBlogClient BlogClient
@inject ICategoryClient CategoryClient

<TextCenter Text="Search Blogs" />

<SearchBlogForm BlogSearchDTO="_blogSearchDTO" CategoryDTOs="_categoryDTOs" ValidSubmit="OnValidSubmit" FormClear="OnFormClear" />

<BlogPostList BlogDTOs="_blogDTOs" />

@code {
    [Parameter] public string SearchString { get; set; }

    private List<BlogDTO> _blogDTOs;
    private List<CategoryDTO> _categoryDTOs;
    private BlogSearchDTO _blogSearchDTO = new BlogSearchDTO();

    protected async override Task OnInitializedAsync()
    {
        await LoadPage();
        _blogSearchDTO.Title = SearchString ?? default;
    }

    private async Task LoadPage()
    {
        var loadBlogsTask = LoadBlogs();
        var loadCategoriesTask = LoadCategories();

        await Task.WhenAll(loadBlogsTask, loadCategoriesTask);
    }

    private async Task LoadBlogs()
    {
        _blogDTOs = await BlogClient.SearchAsync(_blogSearchDTO);
    }

    private async Task LoadCategories()
    {
        _categoryDTOs = await CategoryClient.GetAllAsync();
    }

    private async Task OnValidSubmit()
    {
        await LoadPage();
    }

    private async Task OnFormClear()
    {
        _blogSearchDTO = new BlogSearchDTO();
        await LoadPage();
    }
}