@inject NavigationManager NavigationManager

@if (BlogDTOs == null)
{
    <Loading />
}
else if (BlogDTOs.Count == 0)
{
    <TextCenter Text="No Data Found" />
}
else
{
    <table class="table table-hover mt-3">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">ID</th>
                <th scope="col">Title</th>
                <th scope="col">Short Description</th>
                <th scope="col">Have Cover</th>
                <th scope="col">Created By</th>
                <th scope="col">Date Created</th>
                <th scope="col">Last Update By</th>
                <th scope="col">Last Update Date</th>
                <th scope="col">Reading Time In Minutes</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody> @{ _modelCount = 1;}
            @foreach (var blogDTO in BlogDTOs)
            {
                <tr>
                    <th scope="row">@(_modelCount++)</th>
                    <td>@blogDTO.ID</td>
                    <td>@blogDTO.Title.GetStringBrief(20)</td>
                    <td>@blogDTO.ShortDescription.GetStringBrief(20)</td>
                    <td>@(blogDTO.Cover == null ? "yes" : "no")</td>
                    <td>@blogDTO.CreatedBy</td>
                    <td>@blogDTO.DateCreated.Value.ToLongDateString()</td>
                    <td>@blogDTO.LastUpdateBy</td>
                    <td>@blogDTO.LastUpdateDate.Value.ToLongDateString()</td>
                    <td>@blogDTO.EstimatedReadingTimeInMinutes Minutes</td>
                    <td>
                        <a href="blog/edit/@blogDTO.ID" class="btn btn-warning btn-sm">Edit</a>
                        <button @onclick="(() => OnDeleteButtonClick(blogDTO))" class="btn btn-danger btn-sm">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<SfDialog @bind-Visible="@_deleteDialogVisible" IsModal="true" Width="400px" ShowCloseIcon="true">
    <DialogTemplates>
        <Header>
            Blog Delete
        </Header>
        <Content>
            Are you sure you want to permanently delete blog: @_blogToDelete?.Title ?
        </Content>
    </DialogTemplates>
    <DialogEvents Closed="DeleteCanceled"></DialogEvents>
    <DialogButtons>
        <DialogButton Content="Yes" IsPrimary="true" OnClick="DeleteConfirmed" />
        <DialogButton Content="No" OnClick="@DeleteCanceled" />
    </DialogButtons>
    <DialogPositionData X="center" Y="center" />
</SfDialog>

@code{
    [Parameter] public List<BlogDTO> BlogDTOs { get; set; }
    [Parameter] public EventCallback<int> BlogDelete { get; set; }

    private int _modelCount;
    private bool _deleteDialogVisible;
    private BlogDTO _blogToDelete;

    private void OnDeleteButtonClick(BlogDTO blogDTO)
    {
        _blogToDelete = blogDTO;
        _deleteDialogVisible = true;
    }

    private async Task DeleteConfirmed()
    {
        await BlogDelete.InvokeAsync(_blogToDelete.ID);
        _deleteDialogVisible = false;
    }

    private void DeleteCanceled() => _deleteDialogVisible = false;
}