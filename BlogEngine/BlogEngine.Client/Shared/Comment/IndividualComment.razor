<div class="@MainCommentWrapperCss">

    @if (MainCommentDTO.UserInfoDetailDTO?.ProfilePicture is null)
    {
        <img class="d-flex mr-3 rounded-circle user-thumbnail"
             src="css/Images/user_template_128px.png" alt="user icon">
    }
    else
    {
        <img class="d-flex mr-3 rounded-circle user-thumbnail"
             src="data:image/jpeg;base64,@(Convert.ToBase64String(MainCommentDTO.UserInfoDetailDTO.ProfilePicture))" alt="user icon">
    }

    <div class="media-body">
        <h5 class="mt-0">

            <a href="account/view/@MainCommentDTO.ApplicationUserID/@MainCommentDTO.CreatedBy">@MainCommentDTO.UserInfoDetailDTO?.FullName</a>

            <span @onclick="(async() => await CommentClickedForReply.InvokeAsync(MainCommentDTO))" class="pl-2 btn btn-link">reply</span>

            <AuthorizeView>
                <Authorized>
                    <span @onclick="(async() => await MainCommentDelete.InvokeAsync(MainCommentDTO.ID))" class="pl-2 btn btn-link text-danger">Delete</span>
                </Authorized>
            </AuthorizeView>
        </h5>
        @MainCommentDTO.Body

        @foreach (var subCommentDTO in MainCommentDTO.SubCommentDTOs)
        {
            <!-- SubComment  -->
            <div class="@SubCommentWrapperCss">

                @if (subCommentDTO.UserInfoDetailDTO?.ProfilePicture is null)
                {
                    <img class="d-flex mr-3 rounded-circle user-thumbnail"
                         src="css/Images/user_template_128px.png" alt="user icon">
                }
                else
                {
                    <img class="d-flex mr-3 rounded-circle user-thumbnail"
                         src="data:image/jpeg;base64,@(Convert.ToBase64String(subCommentDTO.UserInfoDetailDTO.ProfilePicture))" alt="user icon">
                }

                <div class="media-body">
                    <h5 class="mt-0">

                        <a href="account/view/@subCommentDTO.ApplicationUserID/@subCommentDTO.CreatedBy">@subCommentDTO.UserInfoDetailDTO?.FullName</a>

                        <span @onclick="(async() => await CommentClickedForReply.InvokeAsync(MainCommentDTO))" class="pl-2 btn btn-link">reply</span>
                        <AuthorizeView>
                            <Authorized>
                                <span @onclick="(async() => await SubCommentDelete.InvokeAsync(subCommentDTO.ID))" class="pl-2 btn btn-link text-danger">Delete</span>
                            </Authorized>
                        </AuthorizeView>
                    </h5>
                    @subCommentDTO.Body
                </div>
            </div>
        }

    </div>
</div>

@code {
    [Parameter] public MainCommentDTO MainCommentDTO { get; set; }
    [Parameter] public string MainCommentWrapperCss { get; set; }
    [Parameter] public string SubCommentWrapperCss { get; set; }
    [Parameter] public EventCallback<MainCommentDTO> CommentClickedForReply { get; set; }
    [Parameter] public EventCallback<int> MainCommentDelete { get; set; }
    [Parameter] public EventCallback<int> SubCommentDelete { get; set; }
}